function(findopus RELEASE_ROOT_DIR DEBUG_ROOT_DIR)
	find_library(OPUS_RELEASE_LIBRARY NAME "${LIBRARY_PREFIX}opus${LIBRARY_SUFFIX}" PATHS "${RELEASE_ROOT_DIR}")
	find_library(OPUS_DEBUG_LIBRARY NAME "${LIBRARY_PREFIX}opus${LIBRARY_SUFFIX}" PATHS "${DEBUG_ROOT_DIR}")
	if (EXISTS "${OPUS_RELEASE_LIBRARY}" AND EXISTS "${OPUS_DEBUG_LIBRARY}")
		add_library(Opus UNKNOWN IMPORTED GLOBAL)
        add_library(OPUS::Opus ALIAS Opus)
        set_target_properties(Opus PROPERTIES
            IMPORTED_LINK_INTERFACE_LANGUAGES "C"
            IMPORTED_LOCATION "${OPUS_RELEASE_LIBRARY}")
        set_property(TARGET Opus APPEND PROPERTY
            IMPORTED_CONFIGURATIONS RELEASE)
        set_target_properties(Opus PROPERTIES
            IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
            IMPORTED_LOCATION_RELEASE "${OPUS_RELEASE_LIBRARY}")
        set_property(TARGET Opus APPEND PROPERTY
            IMPORTED_CONFIGURATIONS DEBUG)
        set_target_properties(Opus PROPERTIES
            IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "C"
            IMPORTED_LOCATION_DEBUG "${OPUS_DEBUG_LIBRARY}")
		message(STATUS "Found Opus!")
	else()
		message(FATAL_ERROR "Couldn't find Opus!")
	endif()
endfunction()